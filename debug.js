import View from './view'
import Triangulation from './delaunay'

var canvas = document.querySelector('canvas')
var points = [
    [5, 9], [1, 8], [2.8, 5.4], [4, 1],
    [7.5, 4], [3, 7], [6, 3], [7, 2], [9, 6]
]
var size = [10, 10]
var points = points.map(function (p) { return {x: p[0], y: p[1]} })

// size = [1, 1]
// points = []
// for (var i = 0; i < 100; i++) {
  // points.push({x: Math.random(), y: Math.random()})
// }

// points = [
  // {
    // "x": 0.5820079944096506,
    // "y": 0.7405335812363774
  // },
  // {
    // "x": 0.8130989510100335,
    // "y": 0.30824402649886906
  // },
  // {
    // "x": 0.8413529938552529,
    // "y": 0.4289800638798624
  // },
  // {
    // "x": 0.5666352796833962,
    // "y": 0.5494470898993313
  // },
  // {
    // "x": 0.5316223334521055,
    // "y": 0.19145125057548285
  // },
  // {
    // "x": 0.7511846602428705,
    // "y": 0.736600139643997
  // },
  // {
    // "x": 0.8797232629731297,
    // "y": 0.46348283998668194
  // },
  // {
    // "x": 0.614395200740546,
    // "y": 0.6719168040435761
  // },
  // {
    // "x": 0.625516586471349,
    // "y": 0.013676733244210482
  // },
  // {
    // "x": 0.6759954567532986,
    // "y": 0.1913205529563129
  // },
  // {
    // "x": 0.5899687381461263,
    // "y": 0.13637611246667802
  // },
  // {
    // "x": 0.8737146081402898,
    // "y": 0.9026552746072412
  // },
  // {
    // "x": 0.0004938824567943811,
    // "y": 0.05206055729649961
  // },
  // {
    // "x": 0.420706425094977,
    // "y": 0.2366446778178215
  // },
  // {
    // "x": 0.6141589873004705,
    // "y": 0.2076521182898432
  // },
  // {
    // "x": 0.9470401960425079,
    // "y": 0.1295932619832456
  // }
// ]
//
/* points = [ */
  // {
    // "x": 0.6284295332152396,
    // "y": 0.4006284298375249
  // },
  // {
    // "x": 0.34259154042229056,
    // "y": 0.013901064405217767
  // },
  // {
    // "x": 0.7249027045909315,
    // "y": 0.9380501848645508
  // },
  // {
    // "x": 0.22859538672491908,
    // "y": 0.7703822306357324
  // },
  // {
    // "x": 0.8427023196127266,
    // "y": 0.04144271370023489
  // },
  // {
    // "x": 0.17170499078929424,
    // "y": 0.6162594191264361
  // },
  // {
    // "x": 0.1557889909017831,
    // "y": 0.8284466525074095
  // },
  // {
    // "x": 0.9140359892044216,
    // "y": 0.22455870546400547
  // },
  // {
    // "x": 0.8580471321474761,
    // "y": 0.38282226864248514
  // },
  // {
    // "x": 0.3454287995118648,
    // "y": 0.18057957687415183
  // },
  // {
    // "x": 0.8173859489616007,
    // "y": 0.4617810307536274
  // },
  // {
    // "x": 0.05938338860869408,
    // "y": 0.6032849613111466
  // },
  // {
    // "x": 0.0011955108493566513,
    // "y": 0.6250250721350312
  // },
  // {
    // "x": 0.025451282504945993,
    // "y": 0.7902738808188587
  // },
  // {
    // "x": 0.5380319708492607,
    // "y": 0.8064086507074535
  // },
  // {
    // "x": 0.47663660044781864,
    // "y": 0.7441870605107397
  // },
  // {
    // "x": 0.811942386906594,
    // "y": 0.4004487234633416
  // },
  // {
    // "x": 0.09169367467984557,
    // "y": 0.2820233190432191
  // },
  // {
    // "x": 0.7185334528330714,
    // "y": 0.01334876287728548
  // },
  // {
    // "x": 0.649036880582571,
    // "y": 0.06132462667301297
  // },
  // {
    // "x": 0.5945161520503461,
    // "y": 0.08515974995680153
  // },
  // {
    // "x": 0.5857698891777545,
    // "y": 0.45027850451879203
  // },
  // {
    // "x": 0.5582224088720977,
    // "y": 0.6912968098185956
  // },
  // {
    // "x": 0.00733430334366858,
    // "y": 0.24585608416236937
  // },
  // {
    // "x": 0.6704786703921854,
    // "y": 0.6632130334619433
  // },
  // {
    // "x": 0.8248355390969664,
    // "y": 0.8511512263212353
  // },
  // {
    // "x": 0.4706605705432594,
    // "y": 0.1861583290155977
  // },
  // {
    // "x": 0.5442831863183528,
    // "y": 0.4377572266384959
  // },
  // {
    // "x": 0.676603380125016,
    // "y": 0.037516271229833364
  // },
  // {
    // "x": 0.42120113829150796,
    // "y": 0.036361233331263065
  // },
  // {
    // "x": 0.44211655110120773,
    // "y": 0.22002148162573576
  // },
  // {
    // "x": 0.01876039896160364,
    // "y": 0.17806996288709342
  // },
  // {
    // "x": 0.33338521304540336,
    // "y": 0.7826346820220351
  // },
  // {
    // "x": 0.7896507014520466,
    // "y": 0.4665851593017578
  // },
  // {
    // "x": 0.7132787222508341,
    // "y": 0.42422849824652076
  // },
  // {
    // "x": 0.9703476016875356,
    // "y": 0.2912615474779159
  // },
  // {
    // "x": 0.6805338903795928,
    // "y": 0.9771271143108606
  // },
  // {
    // "x": 0.7883763695135713,
    // "y": 0.6854827187489718
  // },
  // {
    // "x": 0.2514683441258967,
    // "y": 0.09971863985992968
  // },
  // {
    // "x": 0.9520274964161217,
    // "y": 0.06283548334613442
  // }
// ]

var tri = window.tri = new Triangulation(points)
var view = window.view = new View(canvas, tri, size)

window.debug = function(f, args) {
  switch (f) {
    case 'boundary':
      console.log('boundary', [].slice.call(args, 0))
      break
    case 'boundary done':
      console.log('boundary done', [].slice.call(args, 0))
      break
    case 'merge step':
    case 'merge':
      view.clear()
      view.drawVerts()
      view.drawTriangles(true)
      debugger
      break
    case 'ccwghost':
    case 'cwghost':
      break
    case 'mateghost':
      break
  }
}

view.drawVerts()
try {
  tri.delaunay()
} catch(e) {
  console.log(e)
  console.log(points)
}
view.clear()
view.drawVerts()
view.drawTriangles()

